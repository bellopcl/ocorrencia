﻿@model NWORKFLOW_WEB.MVC_4_BS.Models.RelAnaliticoOcorrenciaViewModel

@{
    ViewBag.Title = "Relatório Analítico de Ocorrência";
}
@section scripts{
    @Scripts.Render("~/bundles/datepicker")


    <script type="text/javascript">
    var espaco = "&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp"

    $('#ImprimirButton').click(function () {
       limparCampos();
       limparCamposAgrupados();
       RelatorioRegistrosOcorrencia();
    });

    function limparCampos() {
        for (var i = 0; i < document.body.getElementsByClassName("form-control input-sm").length; i++) {
            var campo = "#" + document.body.getElementsByClassName("form-control input-sm")[i].id;
            $(campo).rules("remove", "required");
            $(campo).rules("remove", "range");
            $(campo).valid();
        }

    }
    function limparCamposAgrupados() {
        for (var i = 0; i < document.body.getElementsByClassName("form-control input-smgroup").length; i++) {
            var campo = "#" + document.body.getElementsByClassName("form-control input-smgroup")[i].id;
            $(campo).rules("remove", "required");
            $(campo).rules("remove", "range");
            $(campo).valid();
        }
    }
    function RelatorioRegistrosOcorrencia() {

        $('#myModal').modal('show');
        var campoNumeroRegistro = $("#campoNumeroRegistro").val();
        var campoFilial = $("#campoFilial option:selected").val();
        var campoEmbarque = $("#campoEmbarque").val();
        var campoPlaca = $("#campoPlaca").val();
        var campoPeriodoInicial = $("#campoPeriodoInicial").val();
        var campoPeriodoFinal = $("#campoPeriodoFinal").val();
        var campoCliente = $("#CodClienteTextBox").val();
        var campoSituacao = $("#campoSituacao option:selected").val();
        var campoDataFaturamento = $("#campoDataFaturamento").val();

        $.getJSON("@Url.Action("ImprimirRelatorioRegistroOCorrencia")",
               { campoNumeroRegistro: campoNumeroRegistro, campoFilial: campoFilial, campoEmbarque: campoEmbarque, campoPlaca: campoPlaca, campoPeriodoInicial: campoPeriodoInicial, campoPeriodoFinal: campoPeriodoFinal, campoCliente: campoCliente, campoSituacao: campoSituacao, campoDataFaturamento: campoDataFaturamento }, function (data) {

                   if (data.Logado || data.ErroExcecao) {
                       window.location.href = data.redirectUrl;
                       return;
                   }
                   else if (data.listaVazia) {
                       DialogPadrao("warning", "Aviso!", "warning", "Nenhum Registro Encontrado!", "btnOkNenhumRegEncontrado", "OK", true);
                       $('#myModal').modal('hide');
                   }
                   else {
                       window.open(data);
                       $('#myModal').modal('hide');
                   }
               }, "json");

    }

    //PESQUISAR TRAMITES
    $('#TableTramites').dataTable({
        "jQueryUI": true,
        "sPaginationType": "full_numbers",
        "iDisplayLength": 10,
        "iDisplayStart": 1,
        //"ordering": false,
        //"info": false,
        "paging": true,
        "bSort": false,
        "bFilter": true,
        "bInfo": false,
        "lengthChange": false,
        "aoColumns": [
                    { "sClass": "center", "title": "Nº&nbspReg." },
                    { "sClass": "center", "title": "Seq.&nbspTram." },
                    { "sClass": "left", "title": "Descrição&nbspdo&nbspTramite" + espaco.substring(0, 225) },
                    { "sClass": "left", "title": "Usuário&nbspdo&nbspTramite" + espaco.substring(0, 250) },
                    { "sClass": "center", "title": "Data&nbspdo&nbspTramite" + espaco.substring(0, 50) },
                    { "sClass": "left", "title": "Observação&nbspdo&nbspTramite" + espaco + espaco + espaco }
        ],
        "oLanguage": {
            "sLengthMenu": "Mostrando _MENU_ registros por página",
            "sSearch": "Pesquisar:",
            "sZeroRecords": "Nenhum registro encontrado",
            "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
            "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
            "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
            "oPaginate": {
                "sFirst": "Primeiro",
                "sPrevious": "«&nbspAnterior",
                "sNext": "Próximo&nbsp»",
                "sLast": "Último"
            }
        },
        //"scrollY": 380,
        "scrollX": true,
    });
    function PesquisaTramites(codigoRegistro) {
        $('#progressBar').show();
        $("#gridTableTramites").hide();
        $.ajaxSetup({ cache: false });
        $.getJSON("@Url.Action("PesquisaTramites", "Solicitacoes")", { codigoRegistro: codigoRegistro }, function (data) {
                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaN0203TRAPesquisa.length > 0) {
                    var arrayRow = new Array();
                    $('#TableTramites').dataTable().fnClearTable();
                    for (var i = 0; i < data.ListaN0203TRAPesquisa.length; i++) {
                        var numReg = data.ListaN0203TRAPesquisa[i].NUMREG;
                        var seqTra = data.ListaN0203TRAPesquisa[i].SEQTRA;
                        var desTra = data.ListaN0203TRAPesquisa[i].DESTRA;
                        var usuTra = data.ListaN0203TRAPesquisa[i].USUTRA;
                        var nomeUsuTra = data.ListaN0203TRAPesquisa[i].NOMEUSUTRA;
                        var usuTraAux = usuTra + " - " + nomeUsuTra;
                        var datTra = data.ListaN0203TRAPesquisa[i].DATTRA;
                        var obstra = data.ListaN0203TRAPesquisa[i].OBSTRA;
                        arrayRow[i] = new Array(numReg, seqTra, desTra, usuTraAux, datTra, obstra);
                    }
                    $('#TableTramites').dataTable().fnAddData(arrayRow);
                    $('#TableTramites').dataTable().fnPageChange('first');
                    $("#gridTableTramites").slideToggle('fast');
                    $('#TramitesDialog').modal('show');
                    $('#progressBar').hide();
                }
                else {
                    DialogPadrao("warning", "Aviso!", "warning", "Nenhum registro encontrado", "btnOkNenhumRegTraEncontrado", "OK", true);
                    $('#TramitesDialog').modal('hide');
                    $('#progressBar').hide();
                }
            });
        }
        // FIM PESQUISAR TRAMITES

        function ValidaDataFimMaiorInicial(idDataIni, idDataFim) {
            var diaIni = $('#' + idDataIni).val().replace("/", "").replace("/", "").substring(0, 2);
            var mesIni = $('#' + idDataIni).val().replace("/", "").replace("/", "").substring(2, 4);
            var anoIni = $('#' + idDataIni).val().substring(6, 10);
            var dtIni = anoIni + mesIni + diaIni;
            var diaFim = $('#' + idDataFim).val().replace("/", "").replace("/", "").substring(0, 2);
            var mesFim = $('#' + idDataFim).val().replace("/", "").replace("/", "").substring(2, 4);
            var anoFim = $('#' + idDataFim).val().substring(6, 10);
            var dtFim = anoFim + mesFim + diaFim;
            if (dtFim < dtIni) {
                mensagemErro = mensagemErro + "Data Final inválida. A Data Final é menor que a Data Inicial.<br/>";
                return false;
            }
            return true;
        }

        //PESQUISAR CLIENTES
        $('#TableCliente').dataTable({
            "jQueryUI": true,
            "sPaginationType": "full_numbers",
            "iDisplayLength": 10,
            "iDisplayStart": 1,
            //"ordering": false,
            //"info": false,
            "paging": true,
            "bSort": false,
            "bFilter": true,
            "Info": true,
            "bLengthChange": false,
            "aoColumns": [
                        { "sClass": "center", "title": "Sel.", "bSortable": false, "bSearchable": false },
                        { "sClass": "left", "title": "Cód." },
                        { "sClass": "left", "title": "Nome&nbspFantasia" + espaco },
                        { "sClass": "left", "title": "Razão&nbspSocial" + espaco },
                        { "sClass": "right", "title": "CNPJ/CPF" + espaco.substring(0, 55) },
                        { "sClass": "right", "title": "Inscrição&nbspEstadual" },
                        { "sClass": "left", "title": "Endereço" + espaco },
                        { "sClass": "left", "title": "Cidade" + espaco.substring(0, 200) },
                        { "sClass": "left", "title": "Estado" }, ],
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            //"scrollY": 380,
            "scrollX": true,
        });

        function PesquisaTodosCliente(codigoCliente) {
            $('#progressBar').show();
            $("#gridTableCliente").hide();
            $.ajaxSetup({ cache: false });
            $.getJSON("/Solicitacoes/PesquisaCliente", { codigoCliente: codigoCliente }, function (data) {
                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.listaClientes) {
                    var arrayRow = new Array();
                    $('#TableCliente').dataTable().fnClearTable();
                    for (var i = 0; i < data.listaClientes.length; i++) {
                        var codigo = data.listaClientes[i].CodigoCliente;
                        var nome = data.listaClientes[i].NomeFantasia;
                        var selecionar = "<a style='color:#333333' href=\"#\" onClick=\"SelecionarCliente('" + codigo + "','" + nome + "')\"><span class='glyphicon glyphicon-check' title='Selecionar Cliente'></span></a>";
                        var razaoSocial = data.listaClientes[i].RazaoSocial;
                        var cpf = data.listaClientes[i].CnpjCpf;
                        var ie = data.listaClientes[i].InscricaoEstadual;
                        var endereco = data.listaClientes[i].Endereco;
                        var cidade = data.listaClientes[i].Cidade;
                        var estado = data.listaClientes[i].Estado;
                        arrayRow[i] = new Array(selecionar, codigo, nome, razaoSocial, cpf, ie, endereco, cidade, estado);
                    }
                    $('#TableCliente').dataTable().fnAddData(arrayRow);
                    $('#TableCliente').dataTable().fnPageChange('first');
                    $("#gridTableCliente").slideToggle('fast');
                }
                $('#progressBar').hide();
                $('#ClienteDialog').modal('show');
            });
        }

        function SelecionarCliente(codigo, nome) {
            $('#CodClienteTextBox').val("");
            $("#CodClienteTextBox").focus();
            $('#ClienteDialog').modal('hide');
            setTimeout(function () {
                $('#CodClienteTextBox').val(codigo);
                $('#NomeClienteTextBox').val(nome);
                $("#CodClienteTextBox").focus();
            }, 50);
        }

        // FIM PESQUISAR CLIENTES
        //$('#campoPlaca').mask("aaa-9999", { placeholder: "" });
            
        $("#PesquisarTramitesButton").click(function () {
            var numreg = $("#campoNumeroRegistro").val();
            if (numreg != "")
                PesquisaTramites(numreg);
        });

        $("#PesquisarClienteButton").click(function () {
            var codigoCliente = $("#campoCliente").val();
            if (codigoCliente != "")
                PesquisaTodosCliente(codigoCliente);
        });
        $('#myModal').modal('hide');



        function DialogPadrao(tipoPanel, tituloDialog, tipoLabel, msgErro, idBotao, nomeBotao, focus) {
            var html_Dialog = ""
            + "<div class='modal-dialog'>"
            + "     <div class='panel panel-" + tipoPanel + "'>"
            + "         <div class='panel-heading'>"
            + "             <h3 class='panel-title'>" + tituloDialog + "</h3>"
            + "         </div>"
            + "         <div class='panel-body'>"
            + "             <div class='alert alert-dismissable alert-" + tipoLabel + "'>"
            + "                 <strong>" + msgErro + "</strong>"
            + "             </div>"
            + "             <div style='text-align:center'>"
            + "                 <button type='button' class='btn btn-default' id='" + idBotao + "'" + "onclick='$(\"#DialogPadrao\").hide();' data-dismiss='modal'>" + nomeBotao + "</button>"
            + "             </div>"
            + "         </div>"
            + "     </div>"
            + "</div>";

            $("#DialogPadrao").html(html_Dialog);
            $("#DialogPadrao").show();
            $('.dataTables_scrollHead').removeAttr('style');
            $('.dataTables_scrollHead').attr('style', 'overflow: hidden', 'width: 100%;');
        }
        $('.dataTables_scrollHead').removeAttr('style');
        $('.dataTables_scrollHead').attr('style', 'overflow: hidden', 'width: 100%;');
    </script>
}

<script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>

<div class="modal fade" id="myModal" role="dialog" data-backdrop="static">
    <div class="modal-dialog">
        <div class="preloader" id="preloader">
            <img src="http://forum.cinemaemcena.com.br/public/style_images/master/ajax_loading.gif" class="img-responsive center-block">
        </div>
    </div>    
</div>

<!--TRAMITES DIALOG-->
<div class="modal fade bs-example-modal-lg" id="TramitesDialog" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h3 class="panel-title">Pesquisar Tramites</h3>
                </div>
                <div class="panel-body">
                    <div id="gridTableTramites" style="display: none;">
                        <table id="TableTramites" class="display compact" cellspacing="0"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--TRAMITES DIALOG-->
<!--CLIENTE DIALOG-->
<div class="modal fade bs-example-modal-lg" id="ClienteDialog" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <button type="button" id="BtnFecharClienteDialog" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h3 class="panel-title">Pesquisar Cliente</h3>
                </div>
                <div class="panel-body">
                    <div id="gridTableCliente" style="display: none;">
                        <table id="TableCliente" class="display compact" cellspacing="0"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--CLIENTE DIALOG-->
<div class="modal" id="DialogPadrao" data-backdrop="static"></div>
<h4>
    <ul class="breadcrumb" style="margin-bottom: 5px;">
        <li><a href="@Url.Content("~/InformacoesProtocolo/InformacoesProtocolo")">Relatórios</a></li>
        <li class="active">@ViewBag.Title</li>
    </ul>
</h4>
@using (Html.BeginForm("RelAnaliticoOcorrencia", "RelAnaliticoOcorrencia", FormMethod.Post, new { @class = "form-horizontal", id = "formRelatorio", role = "form" }))
{
    <div class="panel panel-default">
        <div class="row">
            <div class="tabela">
                <form class="form-horizontal" id="commentForm" method="get" action="">
                    @Html.ValidationSummary(true)
                    <fieldset>
                        <!-- Form Name -->
                        <legend>Relatório de Ocorrências</legend>
                        <p></p>
                        <!-- Text input-->
                        <div class="form-group">
                            @Html.LabelFor(m => m.campoNumeroRegistro, new { @class = "col-md-2 control-label" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.campoNumeroRegistro, new { @class = "form-control input-sm", @id = "campoNumeroRegistro" })
                                    <span class="input-group-addon" style="padding: 3px 6px">
                                        <a style="color:#333333" href="#" id="PesquisarTramitesButton"><span class="glyphicon glyphicon-search" title="Pesquisar Tramites"></span></a>
                                    </span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.campoNumeroRegistro)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.campoCliente, new { @class = "col-md-2 control-label" })
                            <div class="col-md-2">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.campoCliente, new { @class = "form-control input-smgroup", @id = "CodClienteTextBox" })
                                    <span class="input-group-addon" style="padding: 3px 10px">
                                        <a style='color:#333333' href="#" id="PesquisarClienteButton"><span class="glyphicon glyphicon-search" title="Pesquisar cliente"></span></a>
                                    </span>
                                    @*<span class="input-group-btn">
                                            <button class="btn btn-default btn-sm" id="PesquisarClienteButton" type="button">Pesquisar</button>
                                        </span>*@
                                </div>
                            </div>
                            <div class="col-lg-4">
                                @Html.TextBoxFor(m => m.campoCliente, new { @class = "form-control input-smgroup", @id = "NomeClienteTextBox", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.campoCliente)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.campoSituacao, new { @class = "col-md-2 control-label" })
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.DropDownListFor(m => m.campoSituacao,
                                    new List<SelectListItem> {
                                    new SelectListItem { Value = "0" , Text = "Selecione...", Selected = true},
                                    new SelectListItem { Value = "1" , Text = "Rascunho"},
                                    new SelectListItem { Value = "2" , Text = "Aguardando Aprovação"},
                                    new SelectListItem { Value = "4" , Text = "Aprovado"},
                                    new SelectListItem { Value = "3" , Text = "Integrado"},
                                    new SelectListItem { Value = "5" , Text = "Reprovado"},
                                    new SelectListItem { Value = "6" , Text = "Reabilitado"},
                                    new SelectListItem { Value = "8" , Text = "Coleta"},
                                    new SelectListItem { Value = "9" , Text = "Conferido"},
                                    new SelectListItem { Value = "10" , Text = "Faturado"},
                                    new SelectListItem { Value = "11" , Text = "Indenizado"},
                                    new SelectListItem { Value = "7" , Text = "Cancelado" } }, new { @class = "form-control input-sm", @id = "campoSituacao" })
                                </div>
                                @Html.ValidationMessageFor(m => m.campoSituacao)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.campoDataInicial, new { @class = "col-md-2 control-label" })
                            <div class="row">
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.campoDataInicial, new { @class = "form-control input-smgroup hasDatepicker valid", @id = "campoPeriodoInicial", @type = "date" })
                                </div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.campoDataFinal, new { @class = "form-control input-smgroup hasDatepicker valid", @id = "campoPeriodoFinal", @type = "date" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(m => m.campoDataInicial)
                                    @Html.ValidationMessageFor(m => m.campoDataFinal)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.campoFilial, new { @class = "col-md-2 control-label" })
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.DropDownListFor(m => m.campoFilial,
                                    new List<SelectListItem> {
                                    new SelectListItem { Value = "0" , Text = "Selecione", Selected = true},
                                    new SelectListItem { Value = "1" , Text = "1"},
                                    new SelectListItem { Value = "101" , Text = "101"}}, new { @class = "form-control input-smgroup", @id = "campoFilial" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.TextBoxFor(m => m.campoEmbarque, new { @class = "form-control input-smgroup", @id = "campoEmbarque" })
                                </div>
                                @Html.ValidationMessageFor(m => m.campoEmbarque)
                                @Html.ValidationMessageFor(m => m.campoFilial)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.campoPlaca, new { @class = "col-md-2 control-label" })
                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.campoPlaca, new { @class = "form-control input-sm", @id = "campoPlaca" })
                            </div>
                            @Html.ValidationMessageFor(m => m.campoPlaca)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.campoDataFaturamento, new { @class = "col-md-2 control-label" })
                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.campoDataFaturamento, new { @class = "form-control input-sm hasDatepicker valid", @id = "campoDataFaturamento", @type = "date" })
                            </div>
                            @Html.ValidationMessageFor(m => m.campoDataFaturamento)
                        </div>

                        <div class="col-md-1" id="imprimir">
                            <div class="col-sm-10">
                                <input type="button" value="Processar" id="ImprimirButton" style="margin-top:0px" class="btn btn-primary btn-sm" />
                            </div>
                        </div>

                    </fieldset>
                </form>
            </div><!-- /.col-lg-12 -->
        </div><!-- /.row -->
    </div>
}