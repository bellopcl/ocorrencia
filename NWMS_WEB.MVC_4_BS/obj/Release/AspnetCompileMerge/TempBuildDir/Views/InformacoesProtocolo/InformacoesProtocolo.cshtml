

@model NWORKFLOW_WEB.MVC_4_BS.Models.InformacoesProtocoloViewModel
@{
    ViewBag.Title = "InformacoesProtocolo";
}
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.min.js"></script>
<link href='https://fonts.googleapis.com/css?family=Orbitron' rel='stylesheet' type='text/css'>
@{ var nomeIndicador = "Indicador"; }

@section scripts{

    @Styles.Render("~/Content/timeLine")



    <script type="text/javascript">

      //  var quantidadeAprovados = 0;
      //  var quantidadePendente = 0;
        var diaFormatado = "";
        var quantidadePendentePreAprovado = 0;
        var quantidadeAtrasadoDash = 0;
        var quantidadePendentePreAprovacao = 0;
        var quantidadePendentePreAprovacaoPreAprovador = 0;
        var quantidadeRecebidoMais30Dias = 0;
        var quantidadeRecebidoMenos30Dias = 0;
        var quantidadePendenteAprovacao = 0;
        var funcoes = 0;
        var representante = 0;
        var expedicao = 0;
        var industria = 0;
        var comercial = 0;
        var cliente = 0;
        var transporte = 0;
        var transporteindenizado = 0;
        var contabilidade = 0;
        var mes = 0;
        var ano = 0;
        var arrayMesOcorrencia = new Array();
        var arrayMesXOrigem = new Array();
        var arrayMediaPreAprovado = new Array();
        var arrayMediaAprovado = new Array();
        var indicadorGlobal = "";

        var arrayRepresentante = new Array();
        var arrayExpedicao = new Array();
        var arrayIndustria = new Array();
        var arrayComercial = new Array();
        var arrayCliente = new Array();
        var arrayTransporte = new Array();
        var arrayIndenizado = new Array();
        var arrayContabilidade = new Array();
        var myLineChart;
        var myRadarChart;
        var graficoAgrupamento;
        quantidadeProtocolosPorAreaMeses(30, 3, false);
        $("#1").hide();
        $("#2").hide();
        $("#3").hide();
        $("#4").hide();
        $("#5").hide();
        $("#6").hide();
        $("#6").hide();
        $("#7").hide();
        $("#8").hide();
        $("#9").hide();
        $("#10").hide();
        $("#11").hide();
        $("#12").hide();
        $("#13").hide();
        $("#14").hide();
        $("#15").hide();
        $("#16").hide();
        $("#17").hide();
        $("#18").hide();
        $("#19").hide();
        $("#20").hide();
        $("#23").hide();

        carregarTabelaProtocolosPendentes();
        carregarTabelaProtocolosPreAprovados();
        carregarTabelaProtocolosPendentesAprovacao();
        carregarProtocolosForamAprovadosEsperandoFaturamento();
        carregarAtrasoFaturamento();
        quantidadeProtocolosPorArea(30, 3, false);
        mesXOcorrencia();
        mesXOrigem();
        //mediaPreAprovado();
        //mediaAprovado();
        permissoesTiposDasboard();
        $('#butonPdf').DataTable({
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            }
        });
        $('#tabelaPreAprovacao').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            bAutoWidth: false,
            lengthChange: false,
            searching: false,
            Info: true,
            aoColumns: [
                 { "sWidth": "1%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "1%", "sClass": "center", "title": "Atend." },
                 { "sWidth": "1%", "sClass": "left", "title": "Emissão" },
                 { "sWidth": "25%", "sClass": "center", "title": "Origem" },
                 { "sWidth": "05%", "sClass": "left", "title": "Motivo" },
                 { "sWidth": "25%", "sClass": "center", "title": "NF" },
                 { "sWidth": "25%", "sClass": "center", "title": "Vlr. Líquid." }],
            searching: false,
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            bLengthChange: false
        });

        $('#tableIndicador').DataTable({
            paging: true,
            bInfo: true,
            bFilter: true,
            bSort: false,
            bAutoWidth: true,
            lengthChange: false,
            searching: false,
            aoColumns: [
                 { "sWidth": "11%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "11%", "sClass": "center", "title": "Agrupamento." },
                 { "sWidth": "11%", "sClass": "left", "title": "Cod Produto" },
                 { "sWidth": "20%%", "sClass": "center", "title": "Produto" },
                 { "sWidth": "11%%", "sClass": "center", "title": "Derivação" },
                 { "sWidth": "11%", "sClass": "left", "title": "Origem" },
                 { "sWidth": "11%", "sClass": "center", "title": "Cod. Cliente" },
                 { "sWidth": "11%", "sClass": "center", "title": "Motivo" },
                 { "sWidth": "11%", "sClass": "center", "title": "Quantidade Rec." },
                 { "sWidth": "11%", "sClass": "center", "title": "Quantidade Fat." }],
            Info: true,
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            bLengthChange: false
        });
        $('#tableOcorrenciasFaturamento').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            lengthChange: false,
            bAutoWidth: true,
            searching: false,
            aoColumns: [
                 { "sWidth": "1%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "1%", "sClass": "center", "title": "Atend." },
                 { "sWidth": "1%", "sClass": "left", "title": "Emissão" },
                 { "sWidth": "1%", "sClass": "center", "title": "Dat. Situação" },
                 { "sWidth": "50%", "sClass": "center", "title": "Origem" },
                 { "sWidth": "05%", "sClass": "left", "title": "Motivo" },
                 { "sWidth": "25%", "sClass": "center", "title": "NF" },
                 { "sWidth": "25%", "sClass": "center", "title": "Vlr. Líquid." }],
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            bLengthChange: false
        });
    

        $('#tableIndicadorSetores').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            bAutoWidth: true,
            lengthChange: false,
            searching: false,
            aoColumns: [
                 { "sWidth": "11%", "sClass": "Center", "title": "Setor" },
                 { "sWidth": "11%", "sClass": "center", "title": "Valor Devolução" }, ],
            Info: true,
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            bLengthChange: false
        });

        $('#tabelaPreAprovado').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            bAutoWidth: true,
            lengthChange: false,
            searching: false,
            aoColumns: [
                 { "sWidth": "1%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "1%", "sClass": "center", "title": "Atend." },
                 { "sWidth": "1%", "sClass": "left", "title": "Emissão" },
                 { "sWidth": "25%", "sClass": "center", "title": "Origem" },
                 { "sWidth": "05%", "sClass": "left", "title": "Motivo" },
                 { "sWidth": "25%", "sClass": "center", "title": "NF" },
                 { "sWidth": "25%", "sClass": "center", "title": "Vlr. Líquid." }],
            Info: true,
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            bLengthChange: false
        });

        $('#tabelaPendenteAprovacao').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            lengthChange: false,
            bAutoWidth: true,
            searching: false,
            aoColumns: [
                 { "sWidth": "1%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "1%", "sClass": "center", "title": "Atend." },
                 { "sWidth": "1%", "sClass": "left", "title": "Emissão" },
                 { "sWidth": "50%", "sClass": "center", "title": "Origem" },
                 { "sWidth": "05%", "sClass": "left", "title": "Motivo" },
                 { "sWidth": "25%", "sClass": "center", "title": "NF" },
                 { "sWidth": "25%", "sClass": "center", "title": "Vlr. Líquid." }],
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            bLengthChange: false
        });

        $('#tableIndicadorDrill').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            lengthChange: false,
            bAutoWidth: true,
            searching: false,
            aoColumns: [
                 { "sWidth": "1%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "1%", "sClass": "center", "title": "Atend." },
                 { "sWidth": "1%", "sClass": "left", "title": "Emissão" },
                 { "sWidth": "50%", "sClass": "center", "title": "Origem" },
                 { "sWidth": "05%", "sClass": "left", "title": "Motivo" },
                 { "sWidth": "25%", "sClass": "center", "title": "NF" },
                 { "sWidth": "25%", "sClass": "center", "title": "Vlr. Líquid." }],
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "«&nbspAnterior",
                    "sNext": "Próximo&nbsp»",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            bLengthChange: false
        });

        $('#tabelaPreAprovadoEsperandoFaturamento').DataTable({
            paging: true,
            bInfo: true,
            bFilter: false,
            bSort: false,
            bAutoWidth: true,
            searching: false,
            aoColumns: [
                 { "sWidth": "1%", "sClass": "left", "title": "Ocr." },
                 { "sWidth": "1%", "sClass": "center", "title": "Atend." },
                 { "sWidth": "1%", "sClass": "left", "title": "Emissão" },
                 { "sWidth": "1%", "sClass": "left", "title": "Situação" },
                 { "sWidth": "50%", "sClass": "center", "title": "Origem" },
                 { "sWidth": "05%", "sClass": "left", "title": "Motivo" },
                 { "sWidth": "25%", "sClass": "center", "title": "NF" },
                 { "sWidth": "25%", "sClass": "center", "title": "Vlr. Líquid." }],
            "oLanguage": {
                "sLengthMenu": "Mostrando _MENU_ registros por página",
                "sSearch": "Pesquisar:",
                "sZeroRecords": "Nenhum registro encontrado",
                "sInfo": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Pesquisados no total de _MAX_ registros)",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext": "Próximo",
                    "sLast": "Último"
                }
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $('td', nRow).attr('nowrap', 'nowrap');
                return nRow;
            },
            "infoCallback": function (settings, start, end, max, total, pre) {
                var api = this.api();
                var pageInfo = api.page.info();
                return 'Mostrando ' + (pageInfo.end > 0 ? 1 : 0) + ' até ' + (pageInfo.recordsTotal - 1 == -1 ? 0 : pageInfo.recordsTotal - 1) + ' registros';
            },
            bLengthChange: false
        });

        var formatar = new Intl.NumberFormat('pt-BR', {
            style: 'currency',
            currency: 'BRL',
            minimumFractionDigits: 2,
        });

        function formatReal(int) {
            var tmp = int + '';
            tmp = tmp.replace(/([0-9]{2})$/g, ",$1");
            if (tmp.length > 6)
                tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, ".$1,$2");

            return tmp;
        }
        function diasemana() {
            var hoje = new Date();
            var dia = hoje.getDay();
            var semana = new Array(6);

            semana[0] = 'Domingo';
            semana[1] = 'Segunda-Feira';
            semana[2] = 'Terça-Feira';
            semana[3] = 'Quarta-Feia';
            semana[4] = 'Quinta-Feira';
            semana[5] = 'Sexta-Feira';
            semana[6] = 'Sábado';
            diaFormatado = semana[dia];
        }

        function permissoesTiposDasboard() {
            $.getJSON("@Url.Action("PesquisarAcessoDashboard")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaN0204DUSU.length > 0) {
                    for (var i = 0; i < data.ListaN0204DUSU.length; i++) {
                        switch (data.ListaN0204DUSU[i].CODTIP) {
                            case 1:
                                $("#1").show();
                                break;
                            case 2:
                                $("#2").show();
                                break;
                            case 3:
                                $("#3").show();
                                break;
                            case 4:
                                $("#4").show();
                                break;
                            case 5:
                                $("#5").show();
                                break;
                            case 6:
                                $("#6").show();
                                break;
                            case 7:
                                $("#7").show();
                                break;
                            case 8:
                                $("#8").show();
                                break;
                            case 9:
                                $("#9").show();
                                break;
                            case 10:
                                $("#10").show();
                                break;
                            case 11:
                                $("#11").show();
                                break;
                            case 12:
                                $("#12").show();
                                break;
                            case 13:
                                $("#13").show();
                                break;
                            case 14:
                                $("#14").show();
                                break;
                            case 15:
                                $("#15").show();
                                break;
                            case 16:
                                $("#16").show();
                                break;
                            case 17:
                                $("#17").show();
                                break;
                            case 18:
                                $("#18").show();
                                break;
                            case 19:
                                $("#19").show();
                                break;
                            case 20:
                                $("#20").show();
                                break;
                            case 23:
                                $("#23").show();
                                break;
                        }
                    }
                }
            });
        }

        function carregarTabelaProtocolosPreAprovados() {
            
            $.getJSON("@Url.Action("PesquisarProtocolosAprovados")", {}, function (data) {
                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaProtocolosPendentes.length > 0) {
                    var arrayRow = new Array();
                    $('#tabelaPreAprovado').dataTable().fnClearTable();
                    for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                        var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                        var DataFechamento = data.ListaProtocolosPendentes[i].DataHrGeracao.replace("00:00:00", "");
                        var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                        var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                        var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                        var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                        var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                        arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                    }
                    quantidadePendentePreAprovado = data.ListaProtocolosPendentes.length;
                    arrayRow[arrayRow.length] = new Array("", "", "", "", "", "TOTAL:", data.ListaProtocolosPendentes[data.ListaProtocolosPendentes.length - 1].TotalValorLiquidoD);
                    $('#tabelaPreAprovado').dataTable().fnAddData(arrayRow);
                    $('#tabelaPreAprovado').dataTable().fnPageChange('first');
                }
                funcoes += 1;
            });
        }
        /*OK*/
        function carregarTabelaProtocolosPendentes() {
            var valorTotalLiquido = 0.00;
            
            $.getJSON("@Url.Action("PesquisarProtocolosPendentes")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaProtocolosPendentes.length > 0) {
                    var arrayRow = new Array();
                    $('#tabelaPreAprovacao').dataTable().fnClearTable();

                    for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                        var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                        var DataFechamento = data.ListaProtocolosPendentes[i].DataHrGeracao.replace("00:00:00", "");
                        var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                        var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                        var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                        var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                        var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                        arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                    }
                    quantidadePendentePreAprovacao = data.ListaProtocolosPendentes.length;
                    arrayRow[arrayRow.length] = new Array("", "", "", "", "", "TOTAL:", data.ListaProtocolosPendentes[data.ListaProtocolosPendentes.length - 1].TotalValorLiquidoD);
                    quantidadePendentePreAprovacao = data.ListaProtocolosPendentes.length;

                    $('#tabelaPreAprovacao').dataTable().fnAddData(arrayRow);
                    $('#tabelaPreAprovacao').dataTable().fnPageChange('first');
                }
                funcoes += 1;
            });

        }
        function carregarTabelaProtocolosPendentesAprovacao() {
            $.getJSON("@Url.Action("PesquisarProtocolosPendentesAprovacaoDashBoard")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaProtocolosPendentes.length > 0) {
                    var arrayRow = new Array();
                    $('#tabelaPendenteAprovacao').dataTable().fnClearTable();
                    for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                        var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                        var DataFechamento = data.ListaProtocolosPendentes[i].DataHrGeracao.replace("00:00:00", "");
                        var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                        var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                        var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                        var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                        var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                        arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                    }
                    arrayRow[arrayRow.length] = new Array("", "", "", "", "", "TOTAL:", data.ListaProtocolosPendentes[data.ListaProtocolosPendentes.length - 1].TotalValorLiquidoD);
                    quantidadePendenteAprovacao = data.ListaProtocolosPendentes.length;
                    $('#tabelaPendenteAprovacao').dataTable().fnAddData(arrayRow);
                    $('#tabelaPendenteAprovacao').dataTable().fnPageChange('first');
                }
                funcoes += 1;
            });

        }



        function formatarMonetario(value, str_cifrao) {
            return str_cifrao + ' ' + value.formatMoney(2, ',', '.');
        }

        Number.prototype.formatMoney = function (c, d, t) {
            var n = this,
                c = isNaN(c = Math.abs(c)) ? 2 : c,
                d = d == undefined ? "." : d,
                t = t == undefined ? "," : t,
                s = n < 0 ? "-" : "",
                i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "",
                j = (j = i.length) > 3 ? j % 3 : 0;
            return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
        };

        function carregarProtocolosForamAprovadosEsperandoFaturamento() {
            var valorTotalLiquido = 0.00;
            $.getJSON("@Url.Action("AprovadosEsperandoFaturamento")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.lista.length > 0) {
                    var arrayRow = new Array();
                    var arrayOcorrencia = new Array();
                    $('#tabelaPreAprovadoEsperandoFaturamento').dataTable().fnClearTable();

                    for (var i = 0; i < data.lista.length; i++) {
                        var CodigoRegistro = data.lista[i].CodigoRegistro;
                        var DataFechamento = data.lista[i].DataHrGeracao.replace("00:00:00", "");
                        var descMotivo = data.lista[i].DescMotivoDevolucao;
                        var DescSituacaoRegistro = data.lista[i].DescSituacaoRegistro;
                        var DescOrigemOcorrencia = data.lista[i].DescOrigemOcorrencia;
                        var NumeroNotaFiscal = data.lista[i].NumeroNota;
                        var valorLiquido = data.lista[i].ValorLiquido;
                        var descTipoAtendimento = data.lista[i].DescTipoAtendimento;
                        arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DescSituacaoRegistro, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));

                    }
                    quantidadeAtrasadoDash = data.quantidadeEmAtraso;
                    quantidadePendentePreAprovacaoPreAprovador = data.quantidadeEmDia;
                    arrayRow[arrayRow.length] = new Array("", "", "", "", "", "", "TOTAL:", data.lista[data.lista.length - 1].TotalValorLiquidoD);
                    $('#tabelaPreAprovadoEsperandoFaturamento').dataTable().fnAddData(arrayRow);
                    $('#tabelaPreAprovadoEsperandoFaturamento').dataTable().fnPageChange('first');
                }
                funcoes += 1;
            });
        }


        function carregarAtrasoFaturamento() {
            var valorTotalLiquido = 0.00;
            $.getJSON("@Url.Action("carregarAtrasoFaturamento")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.quantidade.length > 0) {
                    quantidadeRecebidoMais30Dias = data.quantidade[0][0];
                    quantidadeRecebidoMenos30Dias = data.quantidade[0][1];
                }
                funcoes += 1;
            });
        }


        function mesXOcorrencia() {
            $.getJSON("@Url.Action("mesXOcorrencia")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.mesOcorrencia.length > 0) {

                    for (var i = 0; i < data.mesOcorrencia.length; i++) {
                        var mesXorigemOcorrencia = data.mesOcorrencia[i].mes;
                        var mesXquantidadeOcorrencia = data.mesOcorrencia[i].quantidade;
                        var mesXAno = data.mesOcorrencia[i].quantidade;
                        arrayMesOcorrencia[i] = new Array(mesXorigemOcorrencia, mesXquantidadeOcorrencia);
                    }
                }
                funcoes += 1;
            });
        }

        function mesXOrigem() {
            $.getJSON("@Url.Action("mesXOrigem")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.mesOrigem.length > 0) {
                    var countComercial = 0;
                    var countRepresentante = 0;
                    var countExpedicao = 0;
                    var countCliente = 0;
                    var countTransporte = 0;
                    var countIndustria = 0;
                    var countContabilidade = 0;
                    var countIndenizado = 0;

                    for (var i = 0; i < data.mesOrigem.length; i++) {
                        var mes = data.mesOrigem[i].mes;
                        var ano = data.mesOrigem[i].ano;
                        var quantidade = data.mesOrigem[i].quantidade;
                        var origem = data.mesOrigem[i].origem;

                        switch (data.mesOrigem[i].origem) {
                            case "Comercial":
                                arrayComercial[countComercial] = new Array(mes, quantidade, origem, ano);
                                countComercial++;
                                break;
                            case "Representante":
                                arrayRepresentante[countRepresentante] = new Array(mes, quantidade, origem, ano);
                                countRepresentante++;
                                break;
                            case "Expedição":
                                arrayExpedicao[countExpedicao] = new Array(mes, quantidade, origem, ano);
                                countExpedicao++;
                                break;
                            case "Cliente":
                                arrayCliente[countCliente] = new Array(mes, quantidade, origem, ano);
                                countCliente++;
                                break;
                            case "Transporte":
                                arrayTransporte[countTransporte] = new Array(mes, quantidade, origem, ano);
                                countTransporte++;
                                break;
                            case "Transporte Indenizado":
                                arrayIndenizado[countIndenizado] = new Array(mes, quantidade, origem, ano);
                                countIndenizado++;
                                break;
                            case "Qualidade":
                                arrayIndustria[countIndustria] = new Array(mes, quantidade, origem, ano);
                                countIndustria++;
                                break;
                            case "Contabilidade":
                                arrayContabilidade[countContabilidade] = new Array(mes, quantidade, origem, ano);
                                countContabilidade++;
                                break;
                        }
                    }
                }
                funcoes += 1;
            });
        }

        function mediaPreAprovado() {
            $.getJSON("@Url.Action("mediaPreAprovado")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.MediaPreAprovado.length > 0) {

                    for (var i = 0; i < data.MediaPreAprovado.length; i++) {
                        document.getElementById("divmediapreaprovar").innerHTML = data.MediaPreAprovado[i].mediaPreAprovado + ":00 Hrs";
                    }
                }
                funcoes += 1;
            });
        }
        function mediaAprovado() {
            $.getJSON("@Url.Action("mediaAprovado")", {}, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.MediaAprovado.length > 0) {
                    for (var i = 0; i < data.MediaAprovado.length; i++) {
                        document.getElementById("divmediaaprovar").innerHTML = data.MediaAprovado[i].mediaAprovado + ":00 Hrs";
                    }
                }
                funcoes += 1;
            });
        }

        function limparDadosValor() {

            comercial = 0;
            representante = 0;
            expedicao = 0;
            cliente = 0;
            transporte = 0;
            industria = 0;
            contabilidade = 0;
            transporteindenizado = 0;
        }



        function quantidadeProtocolosPorArea(dias, situacao, at) {

            if (at) {
                var dias = $("#filtroDiasValor option:selected").val();
                var situacao = $("#filtroSituacaoValor option:selected").val();
            }

            $.getJSON("@Url.Action("QuantidadeProtocolosPorArea")", { dias: dias, situacao: situacao }, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaN0204ORI.length > 0) {
                    var arrayRow = new Array();
                    limparDadosValor();
                    for (var i = 0; i < data.ListaN0204ORI.length; i++) {
                        switch (data.ListaN0204ORI[i].DESCORI) {
                            case "Comercial":
                                comercial = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Representante":
                                representante = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Expedição":
                                expedicao = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Cliente":
                                cliente = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Transporte":
                                transporte = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Qualidade":
                                industria = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Contabilidade":
                                contabilidade = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                            case "Transporte Indenizado":
                                transporteindenizado = data.ListaN0204ORI[i].QTDORIVALOR;
                                break;
                        }
                    }
                    if (at) {
                        myRadarChart.data.datasets[0].data[0] = comercial;
                        myRadarChart.data.datasets[0].data[1] = representante;
                        myRadarChart.data.datasets[0].data[2] = expedicao;
                        myRadarChart.data.datasets[0].data[3] = cliente;
                        myRadarChart.data.datasets[0].data[4] = transporte;
                        myRadarChart.data.datasets[0].data[5] = transporteindenizado;
                        myRadarChart.data.datasets[0].data[6] = industria;
                        myRadarChart.data.datasets[0].data[7] = contabilidade;
                        
                        myRadarChart.update();
                    }
                } else {
                    if (!at) {
                        limparDadosValor();
                    } else {
                        DialogPadrao("warning", "Aviso!", "warning", "Sem Registro", "btnOkNenhumRegEncontrado", "OK", true);
                    }
                }
                funcoes += 1;
            });
        }

        function grafico() {
            var ctx = document.getElementById("myChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'pie',
                options: {
                    legend: {
                        display: false,
                        fontSize: 6
                    },
                    onClick: function (evt, item){
                        modalIndicadorFaturamentoUsuario(item);
                    }
                },
                data: {
                    labels: ['Aguardando Faturamento (Usu)', 'Pendentes de Pré-Aprovação teste (Usu)'],
                    legend: false,
                    datasets: [{
                        backgroundColor: [
                          "#73a839",
                          "#396339"
                        ],
                        data: [quantidadePendentePreAprovado, quantidadePendentePreAprovacao,]
                    }]
                }
            });

            var ctx = document.getElementById("myChartUsuarioAprovador").getContext('2d');
            var myChartAprovador = new Chart(ctx, {
                type: 'pie',
                options: {
                    legend: {
                        display: false,
                        fontSize: 5
                    },
                    //Criar novo e colocar aqui
                    onClick: function (evt, item) {
                        modalIndicadorFaturamentoOrigem(item);
                    }
                },
                data: {
                    labels: ['Ocorrências com menos de 30 dias', 'Pendentes de Pré-Aprovação (Ori)', 'Ocorrências com mais de 30 dias'],
                    legend: false,
                    datasets: [{
                        backgroundColor: [
                          "#73a839",
                          "#396339",
                          "#ff0000"
                        ],
                        data: [quantidadePendentePreAprovacaoPreAprovador, quantidadePendenteAprovacao, quantidadeAtrasadoDash]
                    }]
                }
            });

            var ctx = document.getElementById("myChartOcorrenciasRecebidas").getContext('2d');
            var myChartAprovador = new Chart(ctx, {
                type: 'pie',
                options: {

                    legend: {
                        display: false,
                        fontSize: 5
                    },
                    onClick: function (evt, item) {
                        modalIndicadorFaturamento(item);
                    }
                },

                data: {
                    labels: ['Mais de 24 Horas', 'Menos de 24 Horas.'],
                    legend: false,
                    datasets: [{
                        backgroundColor: [
                          "#ff0000",
                          "#396339"
                        ],
                        data: [quantidadeRecebidoMais30Dias, quantidadeRecebidoMenos30Dias]
                    }]
                }
            });

            myChart.render();
            myChartAprovador.render();
        }

        function limparDadosQuantidade() {

            comercialMeses = 0;
            representanteMeses = 0;
            exepdicaoMeses = 0;
            clienteMeses = 0;
            transporteMeses = 0;
            transporteindenizadoMeses = 0;
            industriaMeses = 0;
            contabilidadeMeses = 0;

        }

        function quantidadeProtocolosPorAreaMeses(dias, situacao, at) {

            var comercialMeses = 0;
            var representanteMeses = 0;
            var exepdicaoMeses = 0;
            var clienteMeses = 0;
            var transporteMeses = 0;
            var transporteindenizadoMeses = 0;
            var industriaMeses = 0;

            var contabilidadeMeses = 0;
            if (at) {
                var dias = $("#filtroDiasQuantidade option:selected").val();
                var situacao = $("#filtroSituacaoQuantidade option:selected").val();
            }
            $.getJSON("@Url.Action("QuantidadeProtocolosPorAreaMeses")", { dias: dias, situacao: situacao }, function (data) {
                limparDadosQuantidade();
                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaN0204ORI.length > 0) {
                    var arrayRow = new Array();

                    for (var i = 0; i < data.ListaN0204ORI.length; i++) {
                        switch (data.ListaN0204ORI[i].DESCORI) {
                            case "Comercial":
                                comercialMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Representante":
                                representanteMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Expedição":
                                exepdicaoMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Cliente":
                                clienteMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Transporte":
                                transporteMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Qualidade":
                                industriaMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Contabilidade":
                                contabilidadeMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                            case "Transporte Indenizado":
                                transporteindenizadoMeses = data.ListaN0204ORI[i].QTDORI;
                                break;
                        }
                    }
                    if (at) {
                        myLineChart.data.datasets[0].data[0] = comercialMeses;
                        myLineChart.data.datasets[0].data[1] = representanteMeses;
                        myLineChart.data.datasets[0].data[2] = exepdicaoMeses;
                        myLineChart.data.datasets[0].data[3] = clienteMeses;
                        myLineChart.data.datasets[0].data[4] = transporteMeses;
                        myLineChart.data.datasets[0].data[5] = transporteindenizadoMeses;
                        myLineChart.data.datasets[0].data[6] = industriaMeses;
                        myLineChart.data.datasets[0].data[7] = contabilidadeMeses;
                        myLineChart.update();
                    } else {
                        graficoRadarMeses(comercialMeses, representanteMeses, exepdicaoMeses, clienteMeses, transporteMeses, transporteindenizadoMeses, industriaMeses, contabilidadeMeses)
                    }
                } else {
                    if (!at) {
                        graficoRadarMeses(comercialMeses, representanteMeses, exepdicaoMeses, clienteMeses, transporteMeses, transporteindenizadoMeses, industriaMeses, contabilidadeMeses);
                        limparDadosQuantidade();
                        myLineChart.update();
                    } else {
                        DialogPadrao("warning", "Aviso!", "warning", "Sem registros!", "btnOkNenhumRegEncontrado", "OK", true);
                        limparDadosQuantidade();
                        myLineChart.update();
                    }
                }
            });
        }


        $("select#filtroDiasQuantidade").change(function () {
            quantidadeProtocolosPorAreaMeses(0, 0, true)
        });
        $("select#filtroSituacaoQuantidade").change(function () {
            quantidadeProtocolosPorAreaMeses(0, 0, true)
        });
        $("select#filtroSituacaoValor").change(function () {
            quantidadeProtocolosPorArea(0, 0, true)
        });
        $("select#filtroDiasValor").change(function () {
            quantidadeProtocolosPorArea(0, 0, true)
        });
        function graficoRadarMeses(comercialMeses, representanteMeses, exepdicaoMeses, clienteMeses, transporteMeses, transporteindenizadoMeses, industriaMeses, contabilidadeMeses) {

            var ctx = document.getElementById("myChartRadarMeses").getContext('2d');
            var data = {
                labels: ["Comercial", "Representante", "Expedição", "Cliente", "Transporte", "Transporte Indenizado", "Qualidade", "Contabilidade"],
                datasets: [
                    {
                        label: "Quantidade",
                        backgroundColor: "rgba(179,181,198,0.2)",
                        borderColor: "rgba(179,181,198,1)",
                        pointBackgroundColor: "rgba(179,181,198,1)",
                        pointBorderColor: "#fff",
                        pointHoverBackgroundColor: "#fff",
                        pointHoverBorderColor: "rgba(179,181,198,1)",
                        data: [comercialMeses, representanteMeses, exepdicaoMeses, clienteMeses, transporteMeses, transporteindenizadoMeses, industriaMeses, contabilidadeMeses]
                    },
                ]
            };
            myLineChart = Chart.Radar(ctx, {
                data: data,
                options: {
                    tooltips: {
                        enabled: true,
                        label: false
                    },
                    scale: {
                        ticks: {
                            display: false
                        }
                    },
                    legend: {
                        display: false
                    }
                }

            });
        }
        function graficoRadar() {

            var ctxz = document.getElementById("myChartRadar").getContext('2d');
            var data = {
                labels: ["Comercial", "Representante", "Expedição", "Cliente", "Transporte", "Transporte Indenizado", "Qualidade", "Contabilidade"],
                datasets: [
                    {
                        backgroundColor: "rgba(179,181,198,0.2)",
                        borderColor: "rgba(179,181,198,1)",
                        pointBackgroundColor: "rgba(179,181,198,1)",
                        pointBorderColor: "#fff",
                        pointHoverBackgroundColor: "#fff",
                        pointHoverBorderColor: "rgba(179,181,198,1)",
                        data: [comercial, representante, expedicao, cliente, transporte, transporteindenizado, industria, contabilidade]
                    },
                ]

            };
            var formatter = new Intl.NumberFormat('pt-BR', {
                style: 'currency',
                currency: 'BRL',
                minimumFractionDigits: 2,
            });

            myRadarChart = Chart.Radar(ctxz, {
                data: data,
                options: {
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                return '' + formatter.format(tooltipItem.yLabel);
                            }
                        }
                    },
                    scale: {
                        ticks: {
                            display: false
                        }
                    },
                    legend: {
                        display: false
                    }
                },


            });

            mesxprotocolo();
            function mesxprotocolo() {
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayMesOcorrencia.length; i++) {
                    arrayLabel.push(arrayMesOcorrencia[i][0]);
                    arrayData.push(arrayMesOcorrencia[i][1]);
                }
                var ctx = document.getElementById("myBarChart").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true   // minimum value will be 0.
                                }
                            }]
                        }
                    },
                    data: data
                });
            }
            mexorigem();
            function mexorigem() {
                /*Representante*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 2; i < arrayRepresentante.length; i++) {
                    arrayLabel.push(arrayRepresentante[i][0] + '/' + arrayRepresentante[i][3]);
                    arrayData.push(arrayRepresentante[i][1]);
                }
                var ctxre = document.getElementById("myBarChartRepresentante").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxre, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data,
                });

                /*Representante*/

                /*Expedição*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayExpedicao.length; i++) {
                    arrayLabel.push(arrayExpedicao[i][0] + '/' + arrayExpedicao[i][3]);
                    arrayData.push(arrayExpedicao[i][1]);
                }
                var ctxe = document.getElementById("myBarChartExpedicao").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxe, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data
                });

                /*Expedição*/
                /*Industrial*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayIndustria.length; i++) {
                    arrayLabel.push(arrayIndustria[i][0] + '/' + arrayIndustria[i][3]);
                    arrayData.push(arrayIndustria[i][1]);
                }
                var ctxi = document.getElementById("myBarChartIndustrial").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxi, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data
                });

                /*Industrial*/

                /*Comercial*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayComercial.length; i++) {
                    arrayLabel.push(arrayComercial[i][0] + '/' + arrayComercial[i][3]);
                    arrayData.push(arrayComercial[i][1]);
                }
                var ctxcco = document.getElementById("myBarChartComercial").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxcco, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data
                });

                /*Comercial*/
                /*Cliente*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayCliente.length; i++) {
                    arrayLabel.push(arrayCliente[i][0] + '/' + arrayCliente[i][3]);
                    arrayData.push(arrayCliente[i][1]);
                }
                var ctxcl = document.getElementById("myBarChartCliente").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxcl, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data
                });

                /*Cliente*/
                /*Transporte*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayTransporte.length; i++) {
                    arrayLabel.push(arrayTransporte[i][0] + '/' + arrayTransporte[i][3]);
                    arrayData.push(arrayTransporte[i][1]);
                }
                var ctxt = document.getElementById("myBarChartTransporte").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxt, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data,

                });

                /*Transporte Indenizado*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayIndenizado.length; i++) {
                    arrayLabel.push(arrayIndenizado[i][0] + '/' + arrayIndenizado[i][3]);
                    arrayData.push(arrayIndenizado[i][1]);
                }
                var ctxi = document.getElementById("myBarChartIndenizado").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            scaleBeginAtZero: true,
                            scaleStartValue: 0,
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxi, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                display: true,
                                ticks: {
                                    beginAtZero: true,   // minimum value will be 0.
                                    stacked: true
                                }
                            }]
                        }
                    },
                    data: data,

                });

                /*Transporte*/

                /*Contabilidade*/
                var arrayLabel = [];
                var arrayData = [];
                for (var i = 0; i < arrayContabilidade.length; i++) {
                    arrayLabel.push(arrayContabilidade[i][0] + '/' + arrayContabilidade[i][3]);
                    arrayData.push(arrayContabilidade[i][1]);
                }
                var ctxcont = document.getElementById("myBarChartContabilidade").getContext('2d');
                var data = {

                    labels: arrayLabel,
                    datasets: [
                        {
                            label: "Quantidade",
                            backgroundColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderColor: [
                            "#73a839",
                            "#396339",
                            "#436b17",
                            "#3b4c27",
                            "#444f38",
                            "#1a3003",
                            "#738264",
                            "#363835",
                            "#0e1909",
                            "#acc6a1",
                            "#07600f"
                            ],
                            borderWidth: 1,
                            data: arrayData,
                        }
                    ]
                };

                var myBarChart = new Chart(ctxcont, {
                    type: 'bar',
                    options: {
                        legend: {
                            display: false
                        },
                        onClick: function (evt, item) {
                            modalIndicador(item);
                        },
                        scales: {
                            xAxes: [{
                                ticks: {
                                    fontSize: 7
                                }
                            }],
                            yAxes: [{
                                beginAtZero: true,   // minimum value will be 0.
                                stacked: true
                            }]
                        }
                    },
                    data: data,
                });

                /*Contabilidade*/
            }
        }


        function gambi() {
            var minha = this;
            if (funcoes < 8) {
                setTimeout(function () { minha.gambi(); }, 0);
            }
            else {
                grafico();
                graficoRadar();
                $('.tabelaPreAprovacao_wrapper').removeAttr('style');
                $('.tabelaPreAprovacao_wrapper').attr('style', 'overflow: hidden', 'width: : 100%;');
            }

        }

        window.onload = function () {
            gambi();
        }

        $('.dataTables_scrollHead').removeAttr('style');
        $('.dataTables_scrollHead').attr('style', 'overflow: hidden', 'width: 100%;');

        function timeLine() {
            var numeroOcorrencia = document.getElementById("txtOcorrencia").value;
            if (numeroOcorrencia != "") {
                $.getJSON("@Url.Action("timeLine")", { numeroOcorrencia: numeroOcorrencia }, function (data) {
                    if (data.Logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.listaTimeLine.length > 0) {
                        var arrayRow = new Array();

                        for (var i = 0; i < data.listaTimeLine.length; i++) {
                            var NUMREG = data.listaTimeLine[i].NUMREG;
                            var DESTRA = data.listaTimeLine[i].DESTRA;
                            var USUTRA = data.listaTimeLine[i].USUTRA;
                            var DATTRA = data.listaTimeLine[i].DATTRA.replace("00:00:00", "");
                            var OBSTRA = data.listaTimeLine[i].OBSTRA;
                            var OBSREG = data.listaTimeLine[i].OBSREG;
                            var DESCORITRA = data.listaTimeLine[i].DESCORITRA;
                            var DESCORIREG = data.listaTimeLine[i].DESCORIREG;

                            arrayRow[i] = new Array(NUMREG, DESTRA, USUTRA, DATTRA, OBSTRA, OBSREG, DESCORITRA, DESCORIREG);
                        }
                    }
                    construirTimeLine(arrayRow);
                });
            } else {
                DialogPadrao("warning", "Aviso!", "warning", "Campo Vazio", "", "OK", true);
            }
        }

        function construirTimeLine(array) {

            var msg = new Array();

            for (var i = 0; i < array.length; i++) {
                msg[i] = '<div class="message-head clearfix">' +
    '              <div class="avatar pull-left"><a><img src="/Content/images/favico.ico"></a></div>' +
    '             <div class="user-detail">' +
    '                 <h5 class="handle" id="Usuario">' + array[i][2] + ' - ' + array[i][1] + '</h5>' +
    '                 <div class="post-meta">' +
    '                     <div class="asker-meta">' +
    '                         <span class="qa-message-what"></span>' +
    '                         <span class="qa-message-when">' +
    '                             <span class="qa-message-when-data"></span>' +
    '                         </span>' +
    '                         <span class="qa-message-who">' +
    '                             <span class="qa-message-who-pad">' + array[i][6] + '</span>' +
    '                             <span class="qa-message-who-data"><a href="./index.php?qa=user&qa_1=Oleg+Kolesnichenko">' + array[i][3] + '</a></span>' +
    '                         </span>' +
    '                     </div>' +
    '                 </div>' +
    '             </div>' +
    '         </div>' +
    '         <div class="qa-message-content">' +
    '             ' + array[i][4] + '' +
    '             ' + array[i][5] + '' +
    '         </div>' +
                '<p></p>' +
                '<p></p>';
            }
            var msgString = "";
            for (var i = 0; i < msg.length; i++) {
                msgString += msg[i];
            }
            document.getElementById("itemTimeLine").innerHTML = msgString;
        }

        function DialogPadrao(tipoPanel, tituloDialog, tipoLabel, msgErro, idBotao, nomeBotao, focus) {
            var html_Dialog = "" +
            + "<div class='modal-dialog'>"
            + "     <div class='panel panel-" + tipoPanel + "'>"
            + "         <div class='panel-heading'>"
            + "             <h3 class='panel-title'>" + tituloDialog + "</h3>"
            + "         </div>"
            + "         <div class='panel-body'>"
            + "             <div class='alert alert-dismissable alert-" + tipoLabel + "'>"
            + "                 <strong>" + msgErro + "</strong>"
            + "             </div>"
            + "             <div style='text-align:center'>"
            + "                 <button type='button' class='btn btn-default' id='" + idBotao + "'" + "onclick='$(\"#DialogPadrao\").hide();' data-dismiss='modal'>" + nomeBotao + "</button>"
            + "             </div>"
            + "         </div>"
            + "     </div>"
            + "</div>";


            $("#DialogPadrao").html(html_Dialog);
            $("#DialogPadrao").show();
        }

        function modalIndicadorFaturamentoOrigem(item) {
            if (item[0]._model.label == "Ocorrências com menos de 30 dias") {
                $.getJSON("@Url.Action("AprovadosEsperandoFaturamento")", {}, function (data) {
                    
                    if (data.Logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.lista.length > 0) {
                        var arrayRow = new Array();
                        $('#tableOcorrenciasFaturamento').dataTable().fnClearTable();
                        for (var i = 0; i < data.lista.length; i++) {
                           var CodigoRegistro = data.lista[i].CodigoRegistro;
                           var DataFechamento = data.lista[i].DataHrGeracao.replace("00:00:00", "");
                           var DataSituacao = data.lista[i].DataHrGeracao;
                           var descMotivo = data.lista[i].DescMotivoDevolucao;
                           var DescOrigemOcorrencia = data.lista[i].DescOrigemOcorrencia;
                           var NumeroNotaFiscal = data.lista[i].NumeroNota;
                           var valorLiquido = data.lista[i].ValorLiquido;
                           var descTipoAtendimento = data.lista[i].DescTipoAtendimento;
                           arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DataSituacao, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                        }
                        $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                        $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
                    }
                    $('#myModalOcorrenciasFaturamento').modal({
                        show: 'true',
                        refresh: true
                    });
                });
        } else if (item[0]._model.label == "Pendentes de Pré-Aprovação (Ori)") {
            $.getJSON("@Url.Action("PesquisarProtocolosPendentesAprovacaoDashBoard")", {}, function (data) {

            if (data.Logado || data.ErroExcecao) {
                window.location.href = data.redirectUrl;
                return;
            }
            else if (data.ListaProtocolosPendentes.length > 0) {
                var arrayRow = new Array();
                $('#tableOcorrenciasFaturamento').dataTable().fnClearTable();
                for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                    var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                    var DataFechamento = data.ListaProtocolosPendentes[i].DataHrGeracao.replace("00:00:00", "");
                    var DataSituacao = data.ListaProtocolosPendentes[i].DataHrGeracao;
                    var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                    var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                    var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                    var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                    var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                    arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DataSituacao,DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                }
                $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
            }
            $('#myModalOcorrenciasFaturamento').modal({
                show: 'true',
                refresh: true
            });
        });
        } else {
            $.getJSON("@Url.Action("AprovadosEsperandoFaturamento")", {}, function (data) {

            if (data.Logado || data.ErroExcecao) {
                window.location.href = data.redirectUrl;
                return;
            }
            else if (data.lista.length > 0) {
                var arrayRow = new Array();
                $('#tableOcorrenciasFaturamento').dataTable().fnClearTable();
                for (var i = 0; i < data.lista.length; i++) {
                    var CodigoRegistro = data.lista[i].CodigoRegistro;
                    var DataFechamento = data.lista[i].DataHrGeracao.replace("00:00:00", "");
                    var DataSituacao = data.lista[i].DataHrGeracao;
                    var descMotivo = data.lista[i].DescMotivoDevolucao;
                    var DescOrigemOcorrencia = data.lista[i].DescOrigemOcorrencia;
                    var NumeroNotaFiscal = data.lista[i].NumeroNota;
                    var valorLiquido = data.lista[i].ValorLiquido;
                    var descTipoAtendimento = data.lista[i].DescTipoAtendimento;
                    var MenorqueTrintaDias = data.lista[i].MenorqueTrintaDias;
                    if (MenorqueTrintaDias == "S") {
                        arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DataSituacao, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                    }
                }
                $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
            }
            $('#myModalOcorrenciasFaturamento').modal({
                show: 'true',
                refresh: true
            });
        });
        }
        }
        
        function modalIndicadorFaturamentoUsuario(item) {
            if (item[0]._model.label == "Aguardando Faturamento (Usu)") {
                $.getJSON("@Url.Action("PesquisarProtocolosAprovados")", {}, function (data) {
                    if (data.Logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.ListaProtocolosPendentes.length > 0) {
                        var arrayRow = new Array();
                        $('#tableOcorrenciasFaturamento').dataTable().fnClearTable();
                        for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                            var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                            var DataFechamento = data.ListaProtocolosPendentes[i].DataHrGeracao.replace("00:00:00", "");
                            var DataSituacao = data.ListaProtocolosPendentes[i].DataHrGeracao;
                            var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                            var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                            var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                            var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                            var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                            arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DataSituacao, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"))
                        }
                        $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                        $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
                    }
                    $('#myModalOcorrenciasFaturamento').modal({
                        show: 'true',
                        refresh: true
                    });
                });
            } else {
                $.getJSON("@Url.Action("PesquisarProtocolosPendentes")", {}, function (data) {
                    if (data.logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.ListaProtocolosPendentes.length > 0) {
                        var arrayRow = new Array();
                        $("#tableOcorrenciasFaturamento").dataTable().fnClearTable();
                        for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                            var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                            var DataFechamento = data.ListaProtocolosPendentes[i].DataHrGeracao.replace("00:00:00", "");
                            var DataSituacao = data.ListaProtocolosPendentes[i].DataHrGeracao;
                            var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                            var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                            var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                            var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                            var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                            arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DataSituacao, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"))
                        }
                        $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                        $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
                    }
                    $('#myModalOcorrenciasFaturamento').modal({
                        show: 'true',
                        refresh: true
                    });
                });
            }
        }

        function modalIndicadorFaturamento(item) {
            if (item[0]._model.label == "Mais de 24 Horas") {
                $.getJSON("@Url.Action("carregarOcorrenciasFaturamentoAtraso")", {}, function (data) {
           
                    if (data.Logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.ListaProtocolosPendentes.length > 0) {
                        var arrayRow = new Array();
                        $('#tableOcorrenciasFaturamento').dataTable().fnClearTable();
                        for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                            var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                            var DataFechamento = data.ListaProtocolosPendentes[i].DATAEMISSAO.replace("00:00:00", "");
                            var DataSituacao = data.ListaProtocolosPendentes[i].DataSituacao;
                            var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                            var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                            var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                            var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                            var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                            arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DataSituacao,DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                        }
                        $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                        $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
                    }
                    $('#myModalOcorrenciasFaturamento').modal({
                        show: 'true',
                        refresh: true
                    });
                });
            } else {
                $.getJSON("@Url.Action("carregarOcorrenciasFaturamentoEmDia")", {}, function (data) {
                    if (data.Logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.ListaProtocolosPendentes.length > 0) {
                        var arrayRow = new Array();
                        $('#tableOcorrenciasFaturamento').dataTable().fnClearTable();
                        for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                            var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                            var DataFechamento = data.ListaProtocolosPendentes[i].DATAEMISSAO.replace("00:00:00", "");
                            var DataSituacao = data.ListaProtocolosPendentes[i].DataSituacao;
                            var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                            var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                            var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                            var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                            var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                            arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento,DataSituacao, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                        }
                        $('#tableOcorrenciasFaturamento').dataTable().fnAddData(arrayRow);
                        $('#tableOcorrenciasFaturamento').dataTable().fnPageChange('first');
                    }
                    $('#myModalOcorrenciasFaturamento').modal({
                        show: 'true',
                        refresh: true
                    });
                });
            }
        }

        function modalIndicador(item) {
            var itemListener = item;
            indicadorGlobal = itemListener[0]._chart.canvas.id;


            var pos = itemListener[0]._model.label.trim().indexOf("/");
            //Substring iniciando em 0 até posição do caracter especial
            var ano = itemListener[0]._model.label.trim().substring(pos + 1, 60);

            switch (itemListener[0]._model.label.trim().substring(0, pos).trim()) {
                case "JANEIRO":
                    mes = 1;
                    break;
                case "FEVEREIRO":
                    mes = 2;
                    break;
                case "MARÇO":
                    mes = 3;
                    break;
                case "ABRIL":
                    mes = 4;
                    break;
                case "MAIO":
                    mes = 5;
                    break;
                case "JUNHO":
                    mes = 6;
                    break;
                case "JULHO":
                    mes = 7;
                    break;
                case "AGOSTO":
                    mes = 8;
                    break;
                case "SETEMBRO":
                    mes = 9;
                    break;
                case "OUTUBRO":
                    mes = 10;
                    break;
                case "NOVEMBRO":
                    mes = 11;
                    break;
                case "DEZEMBRO":
                    mes = 12;
                    break;
            }
            indicadorGlobal = itemListener[0]._chart.canvas.id
            ocorrenciaDrill('', mes, '', itemListener[0]._chart.canvas.id, ano);
        }



        ///////////////////////////////////////////////////////////////////

        //INDICADORES

        function ocorrenciaDrill(status, mes, filtroAgrup, indicador, ano) {

            $('#myModal').modal({
                show: 'true'
            });

            $.getJSON("@Url.Action("ocorrenciaDrill")", { status: status, mes: mes, filtroAgrup: filtroAgrup, indicador: indicador, ano: ano }, function (data) {

                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaProtocolosPendentes.length > 0) {

                    var arrayRow = new Array();
                    $('#tableIndicadorDrill').dataTable().fnClearTable();
                    for (var i = 0; i < data.ListaProtocolosPendentes.length; i++) {
                        var CodigoRegistro = data.ListaProtocolosPendentes[i].CodigoRegistro;
                        var DataFechamento = data.ListaProtocolosPendentes[i].DATAEMISSAO.replace("00:00:00", "");
                        var descMotivo = data.ListaProtocolosPendentes[i].DescMotivoDevolucao;
                        var DescOrigemOcorrencia = data.ListaProtocolosPendentes[i].DescOrigemOcorrencia;
                        var NumeroNotaFiscal = data.ListaProtocolosPendentes[i].NumeroNota;
                        var valorLiquido = data.ListaProtocolosPendentes[i].ValorLiquido;
                        var descTipoAtendimento = data.ListaProtocolosPendentes[i].DescTipoAtendimento;
                        arrayRow[i] = new Array(CodigoRegistro, descTipoAtendimento, DataFechamento, DescOrigemOcorrencia, descMotivo, NumeroNotaFiscal, formatarMonetario(parseFloat(valorLiquido), "R$"));
                    }
                    // arrayRow[arrayRow.length] = new Array("", "", "", "", "", "TOTAL:", data.ListaProtocolosPendentes[data.ListaProtocolosPendentes.length - 1].TotalValorLiquidoD);
                    quantidadePendenteAprovacao = data.ListaProtocolosPendentes.length;
                    $('#tableIndicadorDrill').dataTable().fnAddData(arrayRow);
                    $('#tableIndicadorDrill').dataTable().fnPageChange('first');
                }
                carregarIndicador(status, mes, filtroAgrup, indicador, ano);
            });

        }

        function carregarIndicador(status, mes, filtroAgrup, indicador, ano) {
            $.getJSON("@Url.Action("CarregarIndicadoresTabela")", { status: status, mes: mes, filtroAgrup: filtroAgrup, indicador: indicador, ano: ano }, function (data) {
                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaIndicador.length > 0) {
                    var arrayRow = new Array();
                    $('#tableIndicador').dataTable().fnClearTable();

                    for (var i = 0; i < data.ListaIndicador.length; i++) {
                        var codigoRegistro = data.ListaIndicador[i].CodigoRegistro;
                        var descricaoAgrupamento = data.ListaIndicador[i].DescAgrupamento;
                        var codigoProduto = data.ListaIndicador[i].CodPro;
                        var descricaoProduto = data.ListaIndicador[i].DescPro;
                        var derivacao = data.ListaIndicador[i].DesDer;
                        var codigoCliente = data.ListaIndicador[i].CodCliente;
                        var descricaoOrigem = data.ListaIndicador[i].DescOrigemOcorrencia;
                        var descricaoMotivo = data.ListaIndicador[i].DescMotivoDevolucao;
                        var quantidadeRecebida = data.ListaIndicador[i].QtdeDevolucao;
                        var quantidadeFaturada = data.ListaIndicador[i].TotalValorLiquidoD;
                        arrayRow[i] = new Array(codigoRegistro, descricaoAgrupamento, codigoProduto, descricaoProduto, derivacao, descricaoOrigem, codigoCliente, descricaoMotivo, quantidadeRecebida, quantidadeFaturada);//formatarMonetario(parseFloat(valorLiquido), "R$"));
                    }
                    arrayRow[arrayRow.length] = new Array("", "", "", "", "", "", "", "", "TOTAL:", data.ListaIndicador[data.ListaIndicador.length - 1].TotalValorLiquidoS);
                    $('#tableIndicador').dataTable().fnAddData(arrayRow);
                    $('#tableIndicador').dataTable().fnPageChange('first');
                }
                carregarIndicadorIndustriaSetores(status, mes, indicador, ano)
            });

            $('#ImprimirButton').click(function () {
                ImprimirRelatorio(status, mes, indicador, ano);
            });
            $('#ImprimirExcel').click(function () {
                ImprimirRelatorioExcel(status, mes, indicador, ano);
            });

        }


        function ImprimirRelatorioExcel(status, mes, indicador, ano) {
            $.getJSON("@Url.Action("imprimirRelatorioExcel")", { status: status, mes: mes, indicador: indicador, ano: ano},
           function (data) {
           if (data.Logado || data.ErroExcecao) {
                window.location.href = data.redirectUrl;
                return;
           }
           else if (data.listaVazia) {
                DialogPadrao("warning", "Aviso!", "warning", "Nenhum Registro Encontrado!", "btnOkNenhumRegEncontrado", "OK", true);
                $('#myModal').modal('hide');
           }
           else {
                window.open(data);
                $('#myModal').modal('hide');
           }
           }, "json");
        }

        function ImprimirRelatorio(status, mes, indicador, ano){
            $.getJSON("@Url.Action("ImprimirGrafico")", { status: status, mes: mes, indicador: indicador, ano: ano},
           function (data) {
           if (data.Logado || data.ErroExcecao) {
                window.location.href = data.redirectUrl;
                return;
           }
           else if (data.listaVazia) {
                DialogPadrao("warning", "Aviso!", "warning", "Nenhum Registro Encontrado!", "btnOkNenhumRegEncontrado", "OK", true);
                $('#myModal').modal('hide');
           }
           else {
                window.open(data);
                $('#myModal').modal('hide');
           }
           }, "json");
        }

        function carregarIndicadorIndustriaSetores(status, mes, indicador, ano) {
            $.getJSON("@Url.Action("carregarIndicadorSetores")", { status: status, mes: mes, indicador: indicador, ano: ano }, function (data) {
                if (data.Logado || data.ErroExcecao) {
                    window.location.href = data.redirectUrl;
                    return;
                }
                else if (data.ListaIndicador.length > 0) {
                    var arrayRowGrafico = new Array();
                    var arrayRowTabela = new Array();
                    document.getElementById('sac').value = "";
                    document.getElementById('aprovador').value = "";

                    $('#tableIndicadorSetores').dataTable().fnClearTable();

                    for (var i = 0; i < data.ListaIndicador.length; i++) {
                        var descricaoAgrupamento = data.ListaIndicador[i].DescAgrupamento;
                        var valorLiquido = data.ListaIndicador[i].TotalValorLiquidoD;
                        arrayRowGrafico[i] = new Array(descricaoAgrupamento, parseFloat(valorLiquido).toFixed(2));//formatarMonetario(parseFloat(valorLiquido), "R$"));
                        arrayRowTabela[i] = new Array(descricaoAgrupamento, valorLiquido);//formatarMonetario(parseFloat(valorLiquido), "R$"));

                        var x = document.getElementById("filtroAgrupamento");
                        var option = document.createElement("option");
                        option.text = descricaoAgrupamento;
                    }
                    arrayRowTabela[arrayRowTabela.length] = new Array("TOTAL:", data.ListaIndicador[data.ListaIndicador.length - 1].TotalValorLiquidoS);
                    $('#tableIndicadorSetores').dataTable().fnAddData(arrayRowTabela);
                    $('#tableIndicadorSetores').dataTable().fnPageChange('first');
                    if (graficoAgrupamento != undefined) {
                        graficoAgrupamento.destroy();
                    }
                    graficoSetoresIndustria(arrayRowGrafico);
                }
            });



        }
        /*IndustrialSetores*/
        function graficoSetoresIndustria(array) {
            var arrayLabelMinerado = [];
            var arrayDataMinerado = [];
            for (var i = 0; i < array.length; i++) {
                arrayLabelMinerado.push(array[i][0]);
                arrayDataMinerado.push(array[i][1]);
            }
            var formatter = new Intl.NumberFormat('pt-BR', {
                style: 'currency',
                currency: 'BRL',
                minimumFractionDigits: 2,
            });

            var ctxi = document.getElementById("myBarChartIndustrialGrafico").getContext('2d');

            var data = {

                labels: arrayLabelMinerado,
                datasets: [
                    {
                        scaleBeginAtZero: true,
                        scaleStartValue: 0,
                        label: "Valor",
                        backgroundColor: [
                        "#73a839",
                        "#396339",
                        "#436b17",
                        "#3b4c27",
                        "#444f38",
                        "#1a3003",
                        "#738264",
                        "#363835",
                        "#0e1909",
                        "#acc6a1",
                        "#07600f"
                        ],
                        borderColor: [
                        "#73a839",
                        "#396339",
                        "#436b17",
                        "#3b4c27",
                        "#444f38",
                        "#1a3003",
                        "#738264",
                        "#363835",
                        "#0e1909",
                        "#acc6a1",
                        "#07600f"
                        ],
                        borderWidth: 1,
                        data: arrayDataMinerado,
                    }
                ]
            };

            graficoAgrupamento = new Chart(ctxi, {
                type: 'bar',
                options: {
                    legend: {
                        display: false
                    },
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                return '' + formatter.format(tooltipItem.yLabel);
                            }
                        }
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                fontSize: 7
                            }
                        }],
                        yAxes: [{
                            display: true,
                            ticks: {
                                beginAtZero: true,   // minimum value will be 0.
                                stacked: true
                            }
                        }]
                    }
                },
                data: data
            });

        }
        /*Industrial Setores*/
        var observacaoSAC;
        var observacaoAPROVADOR;
        $(document).ready(function () {
            var table = $('#tableIndicador').DataTable();

            $('#tableIndicador tbody').on('click', 'tr', function () {
                var data = table.row(this).data();
                carregarObservacoes(data[0])
            });
        });

        function carregarObservacoes(numreg) {
            if (numreg != "" && numreg != null) {
                $.getJSON("@Url.Action("carregarObservacoes")", { numreg: numreg }, function (data) {
                    if (data.Logado || data.ErroExcecao) {
                        window.location.href = data.redirectUrl;
                        return;
                    }
                    else if (data.listarObservacoes.length > 0) {
                        for (var i = 0; i < data.listarObservacoes.length; i++) {
                            document.getElementById('sac').value = data.listarObservacoes[0];
                            document.getElementById('aprovador').value = data.listarObservacoes[1];
                        }
                    }
                });
            }
        }

    </script>
}

<p></p>


<div id="myModalOcorrenciasFaturamento" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Ocorrências</h4>
            </div>
            <div class="modal-body">
                <div id="myTabContent" class="tab-content">
                    <ul class="nav nav-tabs" style="margin-bottom: 15px;">
                        <li class="active"><a href="#TipoOcorrencia" data-toggle="tab" aria-expanded="true">Ocorrências</a></li>
                    </ul>
                    <div class="" id="TipoOcorrencia">
                        <div class="row">
                            <div id="3" class="col-lg-12">
                                <div class="panel panel-default">
                                    <table width="100%" class="table table-striped table-hover" id="tableOcorrenciasFaturamento">
                                        <thead>
                                        </thead>
                                        <tbody id="mytableOcorrenciasFaturamento"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@nomeIndicador</h4>
            </div>
            <!--botao pdf-->
            
            <div class="modal-body">
                <div id="myTabContent" class="tab-content">
                    
                    <ul class="nav nav-tabs" style="margin-bottom: 15px;">
                        <input type="button" value="Gerar Relatório PDF" id="ImprimirButton" style="margin-left:0px" class="btn btn-primary btn-sm" />
                        <input type="button" background-color: #FFFFFF value="Gerar Relatório Excel" id="ImprimirExcel" style="margin-left:0px" class="btn btn-primary btn-sm" />
                        <li><a href="#TipoPesq5" data-toggle="tab" aria-expanded="true">Ocorrências</a></li>
                        <li class="active"><a href="#TipoPesq2" data-toggle="tab" aria-expanded="true">Itens</a></li>
                        <li><a href="#TipoPesq3" data-toggle="tab" aria-expanded="true">Setores</a></li>
                        <li><a href="#TipoPesq4" data-toggle="tab" aria-expanded="true">Gráfico</a></li>
                    </ul>
                    <div class="tab-pane fade" id="TipoPesq5">
                        <div class="row">
                            <div id="3" class="col-lg-12">
                                <div class="panel panel-default">
                                    <table width="100%" class="table table-striped table-hover" id="tableIndicadorDrill">
                                        <thead>
                                        </thead>
                                        <tbody id="mytableIndicadorDrill"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane" id="TipoPesq2">
                        <p></p>
                        <div align="right">
                        </div>
                        <p></p>
                        <div class="row">
                            <div id="50" class="col-lg-12">
                                <div class="panel panel-default">
                                    <!-- /.panel-heading -->
                                    <table width="100%" class="table table-striped table-hover" id="tableIndicador">
                                        <thead>
                                        </thead>
                                        <tbody id="bodyIndicadorIndustria"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="comment">SAC:</label>
                            <textarea style="resize: vertical" class=" form-control" cols="200" id="sac"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="comment">APROVADOR:</label>
                            <textarea style="resize: vertical;" class=" form-control" id="aprovador"></textarea>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="TipoPesq3">
                        <div class="row">
                            <div id="3" class="col-lg-12">
                                <div class="panel panel-default">
                                    <table width="100%" class="table table-striped table-hover" id="tableIndicadorSetores">
                                        <thead>
                                        </thead>
                                        <tbody id="myTableIndicadorSetor"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="TipoPesq4">
                        <div class="row">
                            <div id="13" class="col-lg-12">
                                <div class="panel panel-default">
                                    <!-- /.panel-heading -->
                                    <div class="panel-body">
                                        <canvas id="myBarChartIndustrialGrafico"></canvas>
                                    </div>
                                    <!-- /.panel-body -->
                                </div>
                                <!-- /.panel -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="tabela">


    <div class="modal" id="DialogPadrao" data-backdrop="static"></div>
    <div class="row">
        <div id="1" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Ocorrências Pendentes de Pré-Aprovação (Usuário)
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <table width="100%" class="table table-striped table-hover" id="tabelaPreAprovacao">
                        <thead>
                            <tr id="coluna"></tr>
                        </thead>
                        <tbody id="myTablePendentes"></tbody>
                    </table>
                </div>
                <!-- /.panel-body -->

            </div>
            <!-- /.panel -->
        </div>
        <!-- /.col-lg-12 -->
    </div>

    <div class="row">
        <div id="2" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Ocorrências Pré-Aprovadas Aguardando Faturamento (Usuário)
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <table width="100%" class="table table-striped table-hover" id="tabelaPreAprovado">
                        <thead>
                        </thead>
                        <tbody id="myTablePreAprovados"></tbody>
                    </table>
                    <!-- /.table-responsive -->
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>

        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->

    <div class="row">
        <div id="3" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Ocorrências Pendentes de Pré-Aprovação (Origem)
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <table width="100%" class="table table-striped table-hover" id="tabelaPendenteAprovacao">
                        <thead>
                        </thead>
                        <tbody id="myTablePreAprovados"></tbody>
                    </table>
                    <!-- /.table-responsive -->
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>

        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->

    <div class="row">
        <div id="4" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Ocorrências Aprovadas, Recebidas e Reabilitado(Origem)
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <table width="100%" class="table table-striped table-hover" id="tabelaPreAprovadoEsperandoFaturamento">
                        <thead>
                        </thead>
                        <tbody id="myTablePreAprovados"></tbody>
                    </table>
                    <!-- /.table-responsive -->
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>

        <!-- /.col-lg-12 -->
    </div>
    <!-- /.row -->
    <div class="row">
        <div id="19" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">,
                    Valor de Ocorrências Por Área
                </div>
                <!-- /.panel-heading -->
                <div align="right">
                    <select id="filtroSituacaoValor">
                        <option value="0">Selecione..</option> <!--pre-aprovado-->
                        <option value="1">Rascunho</option>
                        <option value="2"></option> <!--Aguardando Aprovação-->
                        <option value="4">Aprovado</option>
                        <option value="3" selected>Integrado</option>
                        <option value="5">Reprovado</option>
                        <option value="6">Reabilitado</option>
                        <option value="8">Coleta</option>
                        <option value="9">Conferido</option>
                        <option value="10">Faturado</option>
                        <option value="7">Cancelado</option>
                        <option value="11">Indenizado</option>
                    </select>
                    <select id="filtroDiasValor">
                        <option value="30">Últimos 30 dias</option>
                        <option value="60">Últimos 60 dias</option>
                        <option value="90">Últimos 90 dias</option>
                        <option value="180">Últimos 180 dias</option>
                        <option value="360">Últimos 360 dias</option>
                    </select>
                </div>
                <div class="panel-body">
                    <canvas id="myChartRadar"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="18" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Quantidade de Ocorrências Por Área
                </div>
                <!-- /.panel-heading -->
                <div align="right">
                    <select id="filtroSituacaoQuantidade">
                        <option value="0">Selecione..</option>
                        <option value="1">Rascunho</option>
                        <option value="2">Aguardando Aprovação</option>
                        <option value="4">Aprovado</option>
                        <option value="3" selected>Integrado</option>
                        <option value="5">Reprovado</option>
                        <option value="6">Reabilitado</option>
                        <option value="8">Coleta</option>
                        <option value="10">Faturado</option>
                        <option value="9">Conferido</option>
                        <option value="7">Cancelado</option>
                        <option value="11">Indenizado</option>
                    </select>
                    <select id="filtroDiasQuantidade">
                        <option value="30">Últimos 30 dias</option>
                        <option value="60">Últimos 60 dias</option>
                        <option value="90">Últimos 90 dias</option>
                        <option value="180">Últimos 180 dias</option>
                        <option value="360">Últimos 360 dias</option>
                    </select>
                </div>
                <div class="panel-body">
                    <canvas id="myChartRadarMeses"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="20" class="col-lg-12">

            <div class="panel panel-default">
                <div align="right">
                    <input type="text" id="txtOcorrencia" name="numeroOcorrencia">
                    <input type="submit" value="Pesquisar" onclick="timeLine()">
                </div>
                <p></p>
                <p></p>
                <p></p>

                <div class="qa-message-list" id="wallmessages">
                    <div class="message-item" id="m16">
                        <div class="message-inner" id="itemTimeLine">

                        </div>
                        <p></p>
                        <p></p>
                        <p></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="grafico">
    <div class="row">
        <div id="6" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Pré-Ap. X Fat. (Usuário)
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myChart"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>

    <div class="row">
        <div id="7" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Pré-Ap. X Fat. (Origem)
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myChartUsuarioAprovador"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="23" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Prazo de Faturamento
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myChartOcorrenciasRecebidas"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="8" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Geral
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChart"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>

    <div class="row">
        <div id="11" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Representante
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartRepresentante"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="12" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Expedição
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartExpedicao"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="13" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Qualidade
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartIndustrial"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="14" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Comercial
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartComercial"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="15" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Cliente
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartCliente"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>
    <div class="row">
        <div id="16" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Transporte
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartTransporte"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>

    <div class="row">
        <div id="16" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Transporte Indenizado
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartIndenizado"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>

    <div class="row">
        <div id="17" class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Mês X Ocorrência - Contabilidade
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <canvas id="myBarChartContabilidade"></canvas>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
        </div>
    </div>

</div>
